version: '3.3'

volumes:
  pg_data:
  static:
  media:

services:
  db:
    container_name: foodgram-db
    image: postgres:14
    env_file:
      - .env
    volumes:
      - pg_data:/var/lib/postgresql/data
    healthcheck:
      test: 
        - "CMD-SHELL"
        - "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"
      interval: 5s
      timeout: 5s
      retries: 5

  backend:
    container_name: foodgram-back
    build: ../backend/foodgram_dj/
    env_file: .env
    #volumes:
    #  - ../backend/:/app/collected_static/
    volumes:
      - static:/backend_static
      - media:/media
    depends_on:
      db:
        condition: service_healthy

  frontend:
    container_name: foodgram-front
    build: ../frontend/
    command: cp -r /app/build/. /frontend_static/
    env_file: .env
    volumes:
    #  - ../frontend/:/app/result_build/
      - static:/frontend_static
  nginx:
    container_name: foodgram-proxy
    image: nginx:1.25.4-alpine
    #build: ../infra
    ports:
      - 8000:80
      # - "80:80"
    depends_on:
      - backend
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      #- ../frontend/build:/usr/share/nginx/html/:ro
      - ../docs/:/usr/share/nginx/html/api/docs/
      - static:/staticfiles
      - media:/media  # Django media
